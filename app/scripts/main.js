"use strict";!function n(o,t,e){function i(s,c){if(!t[s]){if(!o[s]){var a="function"==typeof require&&require;if(!c&&a)return a(s,!0);if(r)return r(s,!0);var f=new Error("Cannot find module '"+s+"'");throw f.code="MODULE_NOT_FOUND",f}var u=t[s]={exports:{}};o[s][0].call(u.exports,function(n){var t=o[s][1][n];return i(t||n)},u,u.exports,n,o,t,e)}return t[s].exports}for(var r="function"==typeof require&&require,s=0;s<e.length;s++)i(e[s]);return i}({1:[function(n,o,t){o.exports=function(){var n={strings:["Digital.","Pharma.","Logistics."],typeSpeed:120,loop:!0};new Typed("#type",n);$('a[href*="#"]').not('[href="#"]').not('[href="#0"]').click(function(n){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var o=$(this.hash);(o=o.length?o:$("[name="+this.hash.slice(1)+"]")).length&&(n.preventDefault(),$("html, body").animate({scrollTop:o.offset().top},1e3,function(){var n=$(o);if(n.focus(),n.is(":focus"))return!1;n.attr("tabindex","-1"),n.focus()}))}})}},{}],2:[function(n,o,t){o.exports=function(){}},{}],3:[function(n,o,t){o.exports=function(){var n=$(".writerform .control-group input"),o=$(".writerform .control-group label"),t=$(".writerform .control-group input[type='checkbox']");o.on("click",function(){$(this).parent().find("input").focus()}),n.on("focus",function(){$(this).parent().find("label").addClass("active")}),n.on("blur",function(){0==$(this).val().length&&$(this).parent().find("label").removeClass("active")}),t.on("click",function(){$(this).is(":checked")?$(this).parent().find("span").css("color","#2196F3"):$(this).parent().find("span").css("color","#999")})}},{}],4:[function(n,o,t){$(document).ready(function(){$(window).innerWidth()>1024?$("#pagepiling").pagepiling({menu:"#menu",anchors:["home","about","signin","contact"],sectionsColor:["#ecf0f1","#2ebe21","#2C3E50","#51bec4"],navigation:{position:"right",tooltips:["Home","About","Signin","Contact"]},afterLoad:function(n,o){1===o?console.log("1"):2===o||3===o&&$("#signinvideo")[0].play()}}):$("#signinvideo")[0].play()}),n("../components/home/home.js")(),n("../components/info/info.js")(),n("../components/writersform/writerform.js")()},{"../components/home/home.js":1,"../components/info/info.js":2,"../components/writersform/writerform.js":3}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
